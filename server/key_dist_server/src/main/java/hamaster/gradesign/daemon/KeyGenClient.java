package hamaster.gradesign.daemon;

import java.io.ByteArrayInputStream;
import java.io.IOException;

import org.springframework.stereotype.Component;

import hamaster.gradesgin.ibe.IBEPrivateKey;
import hamaster.gradesgin.ibs.IBSCertificate;
import hamaster.gradesgin.util.IBECapsule;
import hamaster.gradesgin.util.IBECapsuleAESImpl;
import hamaster.gradesign.IdentityDescription;
import hamaster.gradesign.ibe.util.Hex;

@Component
public class KeyGenClient {

    private IBSCertificate serverCertificate;
    private IBEPrivateKey serverPrivateKey;

    public void init() {
        // TODO connect to key generation server
    }

    public IBEPrivateKey serverPrivateKey() {
        if (serverPrivateKey != null)
            return serverPrivateKey;
        prepareServerKeys();
        return serverPrivateKey;
    }

    public IBSCertificate serverCertificate() {
        if (serverCertificate != null)
            return serverCertificate;
        prepareServerKeys();
        return serverCertificate;
    }
    
    private synchronized void prepareServerKeys() {
        // TODO move to extern source
        String serverIdContenttoLowerCase();
        String keyContent = "1234567";
        byte[] raw = Hex.unhex(serverIdContent);
        ByteArrayInputStream in = new ByteArrayInputStream(raw);
        IBECapsule capsule = new IBECapsuleAESImpl();
        capsule.setKey(keyContent.getBytes());
        IdentityDescription id = null;
        try {
            capsule.readExternal(in);
            id = (IdentityDescription) capsule.getDataAsObject();
        } catch (IOException e) {
            e.printStackTrace();
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } finally {
            capsule.close();
        }
        serverPrivateKey = id == null ? null : id.getPrivateKey();
        serverCertificate = id == null ? null : id.getCertificate();
    }
}
